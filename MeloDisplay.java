/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package melo;
import java.awt.event.*;
import java.beans.*;

/**
 *
 * @author Mijia Jiang 
 */
public class MeloDisplay extends javax.swing.JPanel {

    /**
     * Creates new form MeloDisplay
     */
    private MeloRubette melo;
    public MeloDisplay(MeloRubette melo) {
        this.melo = melo;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents

    private void initComponents() {

        notesLimitLabel = new javax.swing.JLabel();
        notesLimitInput = new javax.swing.JTextField();
        spanLabel = new javax.swing.JLabel();
        spanInput = new javax.swing.JTextField();

        notesLimitLabel.setText("note's limit");

        notesLimitInput.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                notesLimitInputActionPerformed(evt);
            }
        });
        notesLimitInput.addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                System.out.println("new notes' limit!!!!!.");
                melo.setNotesLimit(Integer.parseInt(notesLimitInput.getText()));
            }
        });

        spanLabel.setText("span");
        initializeValue();

        spanInput.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                spanInputActionPerformed(evt);
            }
        });
        spanInput.addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                System.out.println("new span!!!!");
                melo.setSpan(Double.parseDouble(spanInput.getText()));
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spanLabel)
                    .addComponent(notesLimitLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spanInput, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notesLimitInput, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notesLimitLabel)
                    .addComponent(notesLimitInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spanLabel)
                    .addComponent(spanInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(135, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initializeValue() {
        notesLimitInput.setText("1");
        spanInput.setText("1.0");
    }

    private void notesLimitInputActionPerformed(ActionEvent evt) {
        melo.setNotesLimit(Integer.parseInt(notesLimitInput.getText()));
        System.out.println("new notes' limit.");
    }

    private void spanInputActionPerformed(ActionEvent evt) {
        melo.setSpan(Double.parseDouble(spanInput.getText()));
        System.out.println("new span");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField notesLimitInput;
    private javax.swing.JLabel notesLimitLabel;
    private javax.swing.JTextField spanInput;
    private javax.swing.JLabel spanLabel;
    // End of variables declaration//GEN-END:variables
}
